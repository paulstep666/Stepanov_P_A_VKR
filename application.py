# -*- coding: utf-8 -*-
"""Application.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IFZr-pmyhMxYPbEQd6RCt6leFHJLxK72
"""

import numpy as np
import tensorflow as tf
from tensorflow import keras
from flask import Flask, request, render_template
import pickle

pip install flask_ngrok

from flask_ngrok import run_with_ngrok

from google.colab import drive
drive.mount('/content/gdrive')
models_folder = '/content/gdrive/MyDrive/Final_work/models/'
pages_folder = '/content/gdrive/MyDrive/Final_work/pages/'

app = Flask(__name__)
run_with_ngrok(app)

def prediction_1(attr1, attr2, attr3, attr4, attr5, attr6, attr7, attr8, attr9, attr10, attr11):
    a = np.zeros([11])
    atr = a[0]+attr1, a[1]+attr2, a[2]+attr3, a[3]+attr4, a[4]+attr5, a[5]+attr6, a[6]+attr7, a[7]+attr8, a[8]+attr9, a[9]+attr10, a[10]+attr11
    loaded_model = pickle.load(open(models_folder+'Model_for_task1', 'rb')) 
    result = loaded_model.predict(atr)
    return result

def prediction_2(param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12):
    model = keras.models.load_model(models_folder+'Model_perceptron')
    pred = model.predict([param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12])
    return pred

metod1 = ['get', 'post']

@app.route('/', endpoint= 'index', methods = metod1)
def home_und1():
            return render_template(pages_folder + 'pro.html')

@app.route("/home/", methods=metod1)
def choose33():
    if request.method == 'POST':
        select = request.form.get('prediction')
    if(select == 'Model1'):
        return render_template(pages_folder + 'Model1.html')
    elif(select == 'Model2'):
        return render_template(pages_folder + 'Model2.html')

@app.route("/model1/", methods=metod1)
def prediction111():
    message = '' # есть некоторое сообщение, пустое по умолчанию
    if request.method == 'POST': # с помощью этого метода обрабытываем запрос
        attr1 = float(request.form.get('attr1')) # форма для запроса
        attr2 = float(request.form.get('attr2'))
        attr3 = float(request.form.get('attr3'))
        attr4 = float(request.form.get('attr4'))
        attr5 = float(request.form.get('attr5'))
        attr6 = float(request.form.get('attr6'))
        attr7 = float(request.form.get('attr7'))
        attr8 = float(request.form.get('attr8'))
        attr9 = float(request.form.get('attr9'))
        attr10 = float(request.form.get('attr10'))
        attr11 = float(request.form.get('attr11'))
        
        message = prediction_1(attr1, attr2, attr3, attr4, attr5, attr6, attr7, attr8, attr9, attr10, attr11)
    return render_template(pages_folder + 'model1.html', message = message)

@app.route("/model2/", methods=metod1)
def prediction2():
    message = '' # есть некоторое сообщение, пустое по умолчанию
    if request.method == 'POST': #с помощью этого метода обрабытываем запрос
        param1 = request.form.get('param1') # форма для запроса
        param2 = request.form.get('param2')
        param3 = request.form.get('param3')
        param4 = request.form.get('param4')
        param5 = request.form.get('param5')
        param6 = request.form.get('param6')
        param7 = request.form.get('param7')
        param8 = request.form.get('param8')
        param9 = request.form.get('param9')
        param10 = request.form.get('param10')
        param11 = request.form.get('param11')
        param12 = request.form.get('param12')
        
        param1 = float(param1)
        param2 = float(param2)
        param3 = float(param3)
        param4 = float(param4)
        param5 = float(param5)
        param6 = float(param6)
        param7 = float(param7)
        param8 = float(param8)
        param9 = float(param9)
        param10 = float(param10)
        param11 = float(param11)
        param12 = float(param12)

        message = prediction_2(param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12)
        
    return render_template(pages_folder + 'model1.html', message = message)

app.run()